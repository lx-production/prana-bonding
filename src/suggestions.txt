- The tab switching in App.jsx mutates the DOM directly via document.querySelectorAll / getElementById, which bypasses React state and risks stale UI when components rerender or the component unmounts before the DOM call completes; consider tracking the active tab in component state instead.

- useSellBondBalanceData converts BigInt treasury balances and commitments to JavaScript numbers for the donut chart, which will overflow past Number.MAX_SAFE_INTEGER (≈90 WBTC in satoshis) and silently corrupt the visualization; keep these values in BigInt or scale them before charting.

- ConnectWallet assumes an “injected” connector exists and calls connect with undefined otherwise, leaving the button inert on WalletConnect-only setups or desktop browsers without an injected wallet; add a fallback or disable the button when no supported connector is available.

Wallet connect button doesn’t guard against missing connectors.
The click handler always calls connect({ connector: injectedConnector }), but injectedConnector is undefined when MetaMask (or another injected wallet) is not available. Wagmi will throw a runtime error in that case. You can either fall back to the first available connector or disable the button with a friendly message when no injected connector is ready.

---

- React key collisions when the same bond ID exists in both V1 and V2.

combinedBonds merges records from four different contracts but the rendered key only uses bondType and bond.id. If, for example, a user holds buy bond #0 on both V1 and V2, React receives two identical keys (buy-0), so it will recycle the DOM node and show the wrong status/claim button while the list updates. Please add the version (or contract address) to the key so each entry is truly unique (e.g., ``key={${bond.version}-${bond.bondType}-${bond.id}}`).

Active bond cards use key={${bond.bondType}-${bond.id}}, so a V1 and V2 bond that share the same on-chain ID will collide and React will recycle the wrong DOM node. Including the version in the key (and any other ID lookups) will prevent rendering glitches.

- DurationSlider’s PropTypes declare each rate as a string/number, but the hook supplies BigInts. In React 18 this triggers console warnings; either widen the validator to accept bigint or coerce the values before passing them through.

---




---

